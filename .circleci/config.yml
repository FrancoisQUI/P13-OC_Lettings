version: 2.1

orbs:
  python: circleci/python@1.5.0
  heroku: circleci/heroku@1.2.6

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: update style with Tailwind
          command: python manage.py tailwind build
      - run:
          name: collect statics
          command: python manage.py collectstatic
      - run:
          name: Run Tests
          command: python manage.py test
      - run:
          name: Linting
          command: flake8

  create-and-push-docker-image:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create docker image and push it to Docker Hub
          command: |
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker build --build-arg SECRET_KEY=${SECRET_KEY} -t franqui/oc-lettings-fq:$CIRCLE_SHA1 .
            docker push franqui/oc-lettings-fq:$CIRCLE_SHA1

  publish-image-on-heroku:
    executor: heroku/default
    steps:
      - checkout
      - setup_remote_docker:
            version: 20.10.11
            docker_layer_caching: true
      - heroku/install
      - run:
          name: Create heroku app if not exists
          command: |
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku apps:create $HEROKU_APP_NAME || true
      - run:
          name: Set heroku app variables
          command: |
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set SECRET_KEY=${SECRET_KEY} -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set SENTRY_DSN=${SENTRY_DSN} -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set DEBUG=false -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set ALLOWED_HOSTS=${ALLOWED_HOSTS} -a $HEROKU_APP_NAME
      - heroku/push-docker-image:
          process-types: web
      - heroku/release-docker-image:
          process-types: web

workflows:
  test-and-deploy:
    jobs:
      - build-and-test
      - create-and-push-docker-image:
          requires:
            - build-and-test
      - publish-image-on-heroku:
          requires:
            - create-and-push-docker-image
          filters:
            branches:
              only:
                - main
